{"statusCode": 200, "response": ["# AnyCompany Incident Response Runbook\n\n## Incident Summary\n\n### Incident Type:\nAWS Security Control Violation\n\n### Incident Description:\nThe AWS Security Hub finding \"AWS KMS key rotation should be enabled\" indicates that key rotation is not enabled for one or more AWS KMS keys in the account. This control checks that key rotation is enabled for each AWS KMS key, except for keys that have imported key material.\n\nKey rotation is a security best practice that helps to mitigate the potential risk of key compromise. By enabling key rotation, AWS KMS generates new cryptographic material for the KMS key, and the previous key material is marked as non-usable after a specified period of time.\n\n### Incident Response Process:\n\n1. **Acquire, preserve, document evidence**\n   - Identify the specific AWS KMS keys for which key rotation is not enabled.\n   - Document the current configuration settings and key metadata for each affected KMS key.\n\n2. **Determine the sensitivity, dependency of the resources**\n   - Assess the criticality and sensitivity of the data and resources encrypted with the affected KMS keys.\n   - Identify any applications, services, or processes that depend on the affected KMS keys.\n\n3. **Identify the remediation steps**\n   - Enable key rotation for the affected KMS keys using the AWS KMS console, AWS CLI, or AWS SDKs.\n   - Review the key rotation schedule and configure an appropriate rotation period based on your organization's security requirements and compliance obligations.\n\n4. **Verify and validate the changes in lower environment**\n   - If possible, test the key rotation process in a non-production environment to ensure that there are no unexpected issues or compatibility problems.\n   - Verify that applications and services can successfully use the new key material after rotation.\n\n5. **Confirm with respective application teams**\n   - Coordinate with the application teams responsible for the services and processes that depend on the affected KMS keys.\n   - Ensure that they are aware of the planned key rotation and any potential impacts or necessary changes on their end.\n\n6. **Make changes to resolve the incident**\n   - Once the necessary preparations are complete, enable key rotation for the affected KMS keys in the production environment.\n   - Monitor the key rotation process and ensure that it completes successfully.\n\n7. **Record history and actions**\n   - Document the steps taken to remediate the issue, including the specific KMS keys for which key rotation was enabled, the rotation schedule, and any other relevant details.\n   - Update the incident response record with the actions taken and the resolution details.\n\n8. **Post activity - perform a root cause analysis, update policies if needed**\n   - Conduct a root cause analysis to understand why key rotation was not enabled for the affected KMS keys.\n   - Review and update your organization's policies and procedures related to KMS key management and rotation, if necessary.\n   - Implement any additional controls or processes to prevent similar incidents from occurring in the future.\n\nBy following this incident response process, AnyCompany can effectively remediate the \"AWS KMS key rotation should be enabled\" finding, mitigate the associated risks, and improve the overall security posture of its AWS KMS key management practices.", "aws kms key rotation enabled", []], "res": [{"doc": {"Id": "arn:aws:securityhub:us-west-2:533267187815:security-control/EC2.10/finding/83ee895f-3748-4341-9dc0-fd804464852e", "Title": "Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service", "Description": "This control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.", "Severity": "MEDIUM", "ResourceType": "AwsEc2Vpc", "UpdatedAt": "2024-07-13T08:20:46.433Z"}, "response": "# AnyCompany Incident Response Runbook: EC2 VPC Endpoint Configuration\n\n## Incident Summary\n\n### Incident Type\nSecurity Configuration Issue\n\n### Incident Description\nThe AWS Security Hub finding indicates that Amazon EC2 instances in one or more Virtual Private Clouds (VPCs) are not configured to use VPC endpoints created for the Amazon EC2 service. VPC endpoints enable secure communication between EC2 instances and AWS services within the same VPC, without the need for internet gateways, NAT devices, or VPN connections.\n\n### Severity\nMedium\n\n## Incident Response Process\n\n### 1. Acquire, preserve, document evidence\n- Review the Security Hub finding details, including the affected resource ARNs and the finding description.\n- Take screenshots or export the finding details for documentation purposes.\n\n### 2. Determine the sensitivity, dependency of the resources\n- Identify the affected VPCs and the workloads running on the EC2 instances within those VPCs.\n- Assess the sensitivity and criticality of the workloads and the potential impact of the configuration issue.\n\n### 3. Identify the remediation steps\n- Determine the VPCs that need VPC endpoints created for the EC2 service.\n- Plan the creation of VPC endpoints for the affected VPCs, considering any potential downtime or disruption to workloads.\n\n### 4. Verify and validate the changes in lower environment\n- If possible, test the creation of VPC endpoints in a non-production environment to ensure the process is well understood and to identify any potential issues.\n\n### 5. Confirm with respective application teams\n- Coordinate with the application teams responsible for the affected workloads to notify them about the planned changes and to ensure minimal disruption.\n\n### 6. Make changes to resolve the incident\n- Create VPC endpoints for the EC2 service in the affected VPCs, following AWS best practices and your organization's change management procedures.\n- Update the routing tables and security group rules as necessary to ensure traffic is routed through the VPC endpoints.\n\n### 7. Record history and actions\n- Document the steps taken, any issues encountered, and the final resolution in your incident response tracking system or internal knowledge base.\n\n### 8. Post activity - perform a root cause analysis, update policies if needed\n- Conduct a root cause analysis to understand why the VPC endpoints were not created initially.\n- Review and update your organization's policies, procedures, and automation processes related to VPC endpoint creation and management, if necessary.\n- Implement preventive measures to avoid similar incidents in the future.\n\n## Additional Considerations\n- Monitor the Security Hub findings and other relevant AWS services to ensure the issue is fully resolved and no new findings related to VPC endpoint configuration are generated.\n- Periodically review and validate the configuration of VPC endpoints across your AWS environment to maintain a strong security posture.", "search_query": "vpc endpoint amazon ec2 service \"infrastructure configuration\"", "kendra_docs": []}, {"doc": {"Id": "arn:aws:securityhub:us-west-2:533267187815:security-control/S3.1/finding/7578b508-01f5-45f7-a63e-3732e86a0743", "Title": "S3 general purpose buckets should have block public access settings enabled", "Description": "This control checks whether the preceding Amazon S3 block public access settings are configured at the account level for an S3 general purpose bucket. The control fails if one or more of the block public access settings are set to false.", "Severity": "MEDIUM", "ResourceType": "AwsAccount", "UpdatedAt": "2024-07-13T08:20:43.843Z"}, "response": "# AnyCompany Incident Response Runbook\n\n## Incident Summary\n\n### Incident Type: \nS3 Bucket Misconfiguration\n\n### Incident Description:\nThe AWS Security Hub finding \"S3 general purpose buckets should have block public access settings enabled\" indicates that one or more Amazon S3 buckets in the account have public access settings enabled, which could potentially expose sensitive data or resources to unauthorized access.\n\n### Incident Response Process:\n\n#### 1. Acquire, preserve, document evidence\n- Capture the Security Hub finding details, including the specific S3 bucket(s) involved, the timestamp, and any other relevant information.\n- Take snapshots or backups of the affected S3 buckets and their configurations for further analysis and potential forensic investigation.\n\n#### 2. Determine the sensitivity, dependency of the resources\n- Identify the owner(s) and stakeholder(s) of the affected S3 bucket(s).\n- Assess the sensitivity and criticality of the data stored in the buckets, and the potential impact of unauthorized access or data exposure.\n- Determine if any critical applications, services, or processes depend on the affected S3 buckets.\n\n#### 3. Identify the remediation steps\n- Review the current bucket configurations and identify the specific settings that need to be updated to enable the block public access settings.\n- Evaluate the potential impact of enabling the block public access settings on any existing applications or processes that may depend on public access.\n\n#### 4. Verify and validate the changes in lower environment\n- If possible, create a test or non-production environment to validate the proposed changes before applying them to the production environment.\n- Ensure that enabling the block public access settings does not cause any unintended consequences or disruptions to dependent applications or services.\n\n#### 5. Confirm with respective application teams\n- Communicate the planned changes and potential impacts to the relevant application teams and stakeholders.\n- Obtain approval and coordination from the stakeholders before proceeding with the remediation steps in the production environment.\n\n#### 6. Make changes to resolve the incident\n- Enable the block public access settings for the affected S3 buckets, following the approved remediation plan.\n- Verify that the settings have been applied correctly and that public access to the buckets has been restricted.\n\n#### 7. Record history and actions\n- Document all actions taken, including the specific configurations changes made, the timestamps, and any relevant observations or notes.\n- Update the incident ticket or case with the remediation details and resolution steps.\n\n#### 8. Post activity - perform a root cause analysis, update policies if needed\n- Conduct a thorough root cause analysis to determine how the misconfiguration occurred and identify any potential gaps or weaknesses in the existing security controls or processes.\n- Review and update the relevant policies, procedures, and guidelines to prevent similar misconfigurations from occurring in the future.\n- Implement additional security controls or automation, if necessary, to enforce and maintain the desired S3 bucket configurations.\n- Share lessons learned and best practices with the relevant teams and stakeholders to enhance the overall security posture.", "search_query": "s3 general purpose buckets block public access settings", "kendra_docs": []}, {"doc": {"Id": "arn:aws:securityhub:us-west-2:533267187815:security-control/IAM.4/finding/13d746f6-bf78-4e65-93b0-729a5d6e5dfe", "Title": "IAM root user access key should not exist", "Description": "This AWS control checks whether the root user access key is available.", "Severity": "INFORMATIONAL", "ResourceType": "AwsAccount", "UpdatedAt": "2024-07-13T08:20:43.769Z"}, "response": "# AnyCompany Incident Response Runbook\n\n## Incident Summary\n\n### Incident Type:\nIAM Root User Access Key Exists\n\n### Incident Description:\nThe AWS Security Hub finding \"IAM root user access key should not exist\" indicates that the root user access key is available for your AWS account. This is a security risk as the root user account has complete control over all resources in the account, and if the access key is compromised, it could lead to unauthorized access and potential data breaches or resource misuse.\n\n### Incident Response Process:\n\n#### 1. Acquire, preserve, document evidence\n- Capture the details of the Security Hub finding, including the finding ID, description, and any additional information.\n- Document the current state of the root user access key, including when it was last used and by whom (if possible).\n\n#### 2. Determine the sensitivity, dependency of the resources\n- Assess the potential impact of a compromised root user access key on your AWS resources and data.\n- Identify any critical resources or sensitive data that could be affected.\n\n#### 3. Identify the remediation steps\n- The recommended remediation step is to immediately deactivate the root user access key.\n- If the root user access key is being used for any legitimate purposes, identify alternative methods or create an IAM user with appropriate permissions instead.\n\n#### 4. Verify and validate the changes in a lower environment\n- If possible, test the deactivation of the root user access key in a non-production environment to ensure no critical operations are impacted.\n\n#### 5. Confirm with respective application teams\n- Communicate the planned remediation steps with relevant application teams and stakeholders to ensure they are aware of the potential impact and can prepare accordingly.\n\n#### 6. Make changes to resolve the incident\n- Deactivate the root user access key following AWS best practices and your organization's change management process.\n\n#### 7. Record history and actions\n- Document the steps taken to resolve the incident, including the deactivation of the root user access key and any additional actions performed.\n\n#### 8. Post activity - perform a root cause analysis, update policies if needed\n- Conduct a root cause analysis to understand how the root user access key was created or exposed.\n- Review and update your organization's policies and procedures related to access key management and root user access to prevent similar incidents in the future.\n- Provide awareness training to relevant personnel on the importance of secure access key management and the risks associated with root user access.\n\nBy following this incident response process, AnyCompany can effectively address the Security Hub finding, mitigate the risk of unauthorized access, and strengthen its overall security posture.", "search_query": "aws account \"root user access key\" \"available\" iam access", "kendra_docs": []}, {"doc": {"Id": "arn:aws:securityhub:us-west-2:533267187815:security-control/KMS.4/finding/79acedd5-1e59-44e0-9a62-aa8450e63b0f", "Title": "AWS KMS key rotation should be enabled", "Description": "This AWS control checks that key rotation is enabled for each AWS KMS key. It does not check KMS keys that have imported key material.", "Severity": "MEDIUM", "ResourceType": "AwsKmsKey", "UpdatedAt": "2024-07-13T08:20:42.842Z"}, "response": "# AnyCompany Incident Response Runbook\n\n## Incident Summary\n\n### Incident Type:\nAWS Security Control Violation\n\n### Incident Description:\nThe AWS Security Hub finding \"AWS KMS key rotation should be enabled\" indicates that key rotation is not enabled for one or more AWS KMS keys in the account. This control checks that key rotation is enabled for each AWS KMS key, except for keys that have imported key material.\n\nKey rotation is a security best practice that helps to mitigate the potential risk of key compromise. By enabling key rotation, AWS KMS generates new cryptographic material for the KMS key, and the previous key material is marked as non-usable after a specified period of time.\n\n### Incident Response Process:\n\n1. **Acquire, preserve, document evidence**\n   - Identify the specific AWS KMS keys for which key rotation is not enabled.\n   - Document the current configuration settings and key metadata for each affected KMS key.\n\n2. **Determine the sensitivity, dependency of the resources**\n   - Assess the criticality and sensitivity of the data and resources encrypted with the affected KMS keys.\n   - Identify any applications, services, or processes that depend on the affected KMS keys.\n\n3. **Identify the remediation steps**\n   - Enable key rotation for the affected KMS keys using the AWS KMS console, AWS CLI, or AWS SDKs.\n   - Review the key rotation schedule and configure an appropriate rotation period based on your organization's security requirements and compliance obligations.\n\n4. **Verify and validate the changes in lower environment**\n   - If possible, test the key rotation process in a non-production environment to ensure that there are no unexpected issues or compatibility problems.\n   - Verify that applications and services can successfully use the new key material after rotation.\n\n5. **Confirm with respective application teams**\n   - Coordinate with the application teams responsible for the services and processes that depend on the affected KMS keys.\n   - Ensure that they are aware of the planned key rotation and any potential impacts or necessary changes on their end.\n\n6. **Make changes to resolve the incident**\n   - Once the necessary preparations are complete, enable key rotation for the affected KMS keys in the production environment.\n   - Monitor the key rotation process and ensure that it completes successfully.\n\n7. **Record history and actions**\n   - Document the steps taken to remediate the issue, including the specific KMS keys for which key rotation was enabled, the rotation schedule, and any other relevant details.\n   - Update the incident response record with the actions taken and the resolution details.\n\n8. **Post activity - perform a root cause analysis, update policies if needed**\n   - Conduct a root cause analysis to understand why key rotation was not enabled for the affected KMS keys.\n   - Review and update your organization's policies and procedures related to KMS key management and rotation, if necessary.\n   - Implement any additional controls or processes to prevent similar incidents from occurring in the future.\n\nBy following this incident response process, AnyCompany can effectively remediate the \"AWS KMS key rotation should be enabled\" finding, mitigate the associated risks, and improve the overall security posture of its AWS KMS key management practices.", "search_query": "aws kms key rotation enabled", "kendra_docs": []}]}